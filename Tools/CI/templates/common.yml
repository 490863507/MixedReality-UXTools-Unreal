steps:
- script: |
    echo Enable git core.symlinks
    git config core.symlinks true
    echo Remove $(Build.SourcesDirectory)\MRU_Game\Plugins\MixedRealityUtils\Source\MixedRealityUtils\Private\Native folder (if exists)
    IF EXIST Native rmdir /Q Native
  workingDirectory: '$(Build.SourcesDirectory)\MRU_Game\Plugins\MixedRealityUtils\Source\MixedRealityUtils\Private'
  displayName: 'Remove symlink to Native submodule'

- script: SetupSymlinks.bat
  workingDirectory: '$(Build.SourcesDirectory)'
  displayName: 'Setup Symlinks'

- script: '"$(UnrealEngine)\Engine\Build\BatchFiles\RunUAT.bat" BuildCookRun -project=$(Build.SourcesDirectory)\MRU_Game\MRU_Game.uproject -clean -cook -allmaps -build -stage -platform=Win64 -clientconfig=Development -serverconfig=Development'
  displayName: 'Build Win64 Development'

- script: '"$(UnrealEngine)\Engine\Binaries\Win64\UE4Editor.exe" $(Build.SourcesDirectory)\MRU_Game\MRU_Game.uproject -NoSound -ExecCmds="Automation RunTests MixedRealityUtils" -TestExit="Automation Test Queue Empty" -Log'
  displayName: 'Test MixedRealityUtils in Editor'

- powershell: 'Get-Content $(Build.SourcesDirectory)\MRU_Game\Saved\Logs\MRU_Game.log -Encoding utf8'
  displayName: 'Test logs'

- task: DownloadSecureFile@1
  name: signingCertificate
  displayName: 'Download signing certificate'
  inputs:
    secureFile: 'SigningCertificate.pfx'

- script: |
    IF NOT EXIST "$(Build.SourcesDirectory)\MRU_Game\Build" mkdir "$(Build.SourcesDirectory)\MRU_Game\Build"
    IF NOT EXIST "$(Build.SourcesDirectory)\MRU_Game\Build\HoloLens" mkdir "$(Build.SourcesDirectory)\MRU_Game\Build\HoloLens"
    copy "$(signingCertificate.secureFilePath)" "$(Build.SourcesDirectory)\MRU_Game\Build\HoloLens\SigningCertificate.pfx"
  displayName: 'Copy self-signing certificate (HoloLens)'

- script: '"$(UnrealEngine)\Engine\Build\BatchFiles\RunUAT.bat" BuildCookRun -project=$(Build.SourcesDirectory)\MRU_Game\MRU_Game.uproject -clean -cook -allmaps -build -stage -platform=HoloLens -clientconfig=Development -serverconfig=Development'
  displayName: 'Build HoloLens ARM64 Development'
